<?php

namespace Sumer5020\ZohoBooks\DTOs\Arguments;

/**
 * Class TaskDto
 * Data Transfer Object for a Task.
 */
class TaskDto
{
    /** @var array Inputs data */
    private array $_data;

    /** @var string Unique ID of the project generated by the server */
     private string $project_id;

    /** @var string Unique ID of the task generated by the server */
     private string $task_id;

    /** @var string The current ID of the currency */
     private string $currency_id;

    /** @var string Customer ID of the customer for whom the task is created */
     private string $customer_id;

    /** @var string The name of the task. Max-length [100] */
     private string $task_name;

    /** @var string The name of the project */
     private string $project_name;

    /** @var string Name of the customer to whom the task is created */
     private string $customer_name;

    /** @var float The total hours that are billed */
     private float $billed_hours;

    /** @var float Total hours logged in the project */
     private float $log_time;

    /** @var float Total hours that are un-billed */
     private float $un_billed_hours;

    /**
     * @param array $data
     */
    public function __construct(array $data)
    {
        $this->_data = array_keys($data);

        $this->project_id = $data['project_id'] ?? '';
        $this->task_id = $data['task_id'] ?? '';
        $this->currency_id = $data['currency_id'] ?? '';
        $this->customer_id = $data['customer_id'] ?? '';
        $this->task_name = $data['task_name'] ?? '';
        $this->project_name = $data['project_name'] ?? '';
        $this->customer_name = $data['customer_name'] ?? '';
        $this->billed_hours = $data['billed_hours'] ?? 0.0;
        $this->log_time = $data['log_time'] ?? 0.0;
        $this->un_billed_hours = $data['un_billed_hours'] ?? 0.0;
    }

    /**
     * @return array
     */
    public function toArray(): array
    {
        return array_reduce($this->_data, function ($result, $key) {
            if (property_exists($this, $key)) {
                $result[$key] = $this->$key;
            }
            return $result;
        }, []);
    }
}
